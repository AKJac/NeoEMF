<%@ jet package="fr.inria.atlanmod.neo4emf.codegen.templates.model" imports="java.util.* org.eclipse.emf.codegen.ecore.genmodel.* " class="ReltypesClass"%>
<%
/**
 * Copyright (c) 2002-2006 IBM Corporation and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors: amine ben
 *   IBM - Initial API and implementation
 */
%>
<% GenPackage genPck = (GenPackage) argument; GenModel genModel= genPck.getGenModel();
 /* Trick to import java.util.* without warnings */Iterator.class.getName();%>
<%@ include file="../Header.javajetinc"%>
package reltypes;

<%genModel.addImport("org.neo4j.graphdb.RelationshipType");%>
<%genModel.markImportLocation(stringBuffer);%>
/**
 * <!-- begin-user-doc -->
 * Neo4j <b>relationships</b> for model persistence.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @generated
 */
public enum Reltypes implements RelationshipType
{
<%if (genModel.hasCopyrightField()) {%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final <%=genModel.getImportedName("java.lang.String")%> copyright = <%=genModel.getCopyrightFieldLiteral()%>;<%=genModel.getNonNLS()%>

<%}%>
	
<% for (GenPackage genPackage : genModel.getAllGenPackagesWithClassifiers()){
	for (GenClassifier genClassifier : genPackage.getOrderedGenClassifiers()) { 
		if (genClassifier instanceof GenClass) { GenClass genClass = (GenClass)genClassifier; 
			for (GenFeature genFeature : genClass.getAllGenFeatures()) {
    			 if(genFeature.isReferenceType()){
    		%>
    		<%=genClass.getFeatureID(genFeature)%>,
    		<%		} 
       			}
       		}
       	}
    }%>
} 

//Reltypes Class
<%genModel.emitSortedImports();%>
