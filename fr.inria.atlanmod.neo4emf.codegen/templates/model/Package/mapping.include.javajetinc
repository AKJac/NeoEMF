<%if (isImplementation) {%>
/* Neo4EMF Inserted Code -- Begin*/
<%genModel.addImport("org.neo4j.graphdb.RelationshipType");%>
<%genModel.addImport(genModel.getModelPluginID()+".reltypes.Reltypes");%>
<%genModel.addImport("fr.inria.atlanmod.neo4emf.RelationshipMapping");%>
<%String mappingClassName = genPackage.getPackageInterfaceName()+"RelationshipMapping";%>

private RelationshipMapping relationshipMapping = new <%=mappingClassName%>();

@Override
public RelationshipMapping getRelationshipMapping() {
	return relationshipMapping;
}

class <%=mappingClassName%> implements RelationshipMapping {

	private RelationshipType[][] mapping = new RelationshipType[<%= genPackage.getOrderedGenClassifiers().size()%>][];

	public <%=mappingClassName%>() {
	
<% for (GenClassifier genClassifier : genPackage.getOrderedGenClassifiers()) { 
		if (genClassifier instanceof GenClass) { GenClass genClass = (GenClass)genClassifier;%>
		mapping[<%=genPackage.getClassifierID(genClassifier)%>] = new RelationshipType[<%=genClass.getFeatureCount()%>];
<% 		for (GenFeature genFeature : genClass.getDeclaredFieldGenFeatures()) {
				if(genFeature.isReferenceType()){%>
		mapping[<%=genPackage.getClassifierID(genClassifier)%>][<%=genClass.getFeatureID(genFeature)%>] = Reltypes.<%=genClass.getFeatureID(genFeature)%>;
<%				}//if
			}//for
		}//if
	}//for%>
	} // <%=mappingClassName%>()
	
	public RelationshipType relationshipAt(int classID, int referenceID) {
		assert classID >= 0 && classID < mapping.length : "Invalid Class ID";
		assert referenceID >= 0 && referenceID < mapping[classID].length: "Invalid Reference ID";
		
		return mapping[classID][referenceID];
	}
}// class <%=mappingClassName%>
/* Neo4EMF Inserted Code -- End*/
<%}//if%>