/*
* Neo4EMF inserted code -- begin
*/
<%
List<GenFeature> singlevaluedAttributes = new ArrayList<GenFeature>();
List<GenFeature> multivaluedAttributes = new ArrayList<GenFeature>();
List<GenFeature> enumerationAttributes = new ArrayList<GenFeature>();
List<GenFeature> allAttributes = new ArrayList<GenFeature>();
List<GenFeature> allReferences = new ArrayList<GenFeature>();
for (GenFeature each : genClass.getESetGenFeatures()) {
	  if (each.isVolatile()) continue; // Volatile features are also ignored
	  if (each.isMapType()) continue; // TODO Manage map types
	  if (each.isFeatureMapType()) continue; // TODO Manage feature map types
	  if (each.isWrappedFeatureMapType()) continue; // TODO WTH?
	  if (each.isReferenceType()) {
		  allReferences.add(each);
	  }
	  else if (each.isListType()) {
		  multivaluedAttributes.add(each);
	  } else if (each.isEnumType()){
		  enumerationAttributes.add(each);
	  } else {
		  singlevaluedAttributes.add(each);
	  }
  }
allAttributes.addAll(singlevaluedAttributes);
allAttributes.addAll(multivaluedAttributes);
allAttributes.addAll(enumerationAttributes);
if (!multivaluedAttributes.isEmpty()) {
  	genModel.addImport("java.util.Arrays");
  	genModel.addImport("java.util.List");
}
%>
<%if (isImplementation && (!(genModel.isReflectiveDelegation()))) {%>
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	 <%if (! genModel.getRootExtendsClass().contains(genClass.getClassExtends().substring(9)) ){%>@Override<%}%>
	protected <%=CodegenUtil.getAttributeClassName(genClass)%> <%=CodegenUtil.getAttributeClassGetter()%> {
		if ( data == null || !(data instanceof <%=CodegenUtil.getAttributeClassName(genClass)%>)){
			// TODO check that
			setLoadingOnDemand();
			data = new <%=CodegenUtil.getAttributeClassName(genClass)%>(this);
			if (isLoaded()) {
				((<%=genModel.getImportedName("fr.inria.atlanmod.neo4emf.INeo4emfResource")%>) this.eResource()).fetchAttributes(this);
			}
			unsetLoadingOnDemand();
			}
		return (<%=CodegenUtil.getAttributeClassName(genClass)%>) data;
	}

	/**
	*
	* @generated
	**/
	public void loadAllAttributesFrom(Node n) {
		this.data = new <%=CodegenUtil.getAttributeClassName(genClass)%>(this);
		data.loadAllAttributesFrom(n);
	}
	
	/**
	*
	* @generated
	**/
	public void saveAllAttributesTo(Node n) {
		if (data != null) {
			data.saveAllAttributesTo(n);
		}
	}
	
	/**
	*
	* @generated
	**/
	public void saveAttributeTo(int featureID, Node n) {
		if (data != null) {
			data.saveAttributeTo(featureID, n);
		}
	}
	<%@ include file="attributesInnerClass.javajetinc" fail="silent" %>
	<%@ include file="referencesInnerClass.javajetinc" fail="silent" %>
<%} // if isImplementation
%>
<%for(GenFeature each : allReferences) {%>
// <%=each.getSafeName()%> : <%=each.getImportedType(genClass)%>, bi:<%=each.isBidirectional()%>, chan:<%=each.isChangeable()%>, list:<%=each.isListType()%>, change:<%=each.isChangeable()%>, kind:<%=each.getFeatureKind()%>
<%}%>
/*
* Neo4EMF inserted code -- end
*/
